<?php
/**
 * Implementation of hook_menu()
 */
function udi_central_menu() {
  global $user;
  $file_path = drupal_get_path('module', 'udi_central') .'/includes';

  $items['admin/udi-central'] = array(
    'title' => 'UDI Central',
    'page callback' => 'udi_central_main',
    'access callback' => ($user->uid == 1),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 0
  );

  $items['admin/udi-central/test'] = array(
    'title' => 'Test',
    'page callback' => 'udi_central_dev_test',
    'access callback' => ($user->uid == 1),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 0
  );

  $items['admin/udi-central/export'] = array(
    'title' => 'Export',
    'page callback' => 'udi_central_export_page',
    'access callback' => ($user->uid == 1),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 2
  );

  if (module_exists('location')) {
    $items['admin/udi-central/export/location'] = array(
      'title' => 'Export Location',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('udi_central_location_export_form'),
      'access callback' => ($user->uid == 1),
      'type' => MENU_LOCAL_TASK,
      'file' => 'location.inc',
      'file path' => $file_path,
      'weight' => 0
    );
  }

  if (module_exists('taxonomy')) {
    $items['admin/udi-central/export/taxonomy'] = array(
      'title' => 'Export Taxonomy',
      'description' => 'Export taxonomy definitions.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('udi_central_taxonomy_export_export'),
      'access callback' => ($user->uid == 1),
      'file' => 'taxonomy.inc',
      'file path' => $file_path,
      'type' => MENU_LOCAL_TASK,
      'weight' => 1
    );
  }

  return $items;
}


//function udi_central_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
//  if ($op == 'prepare') {
//    //udi_central_debug($node);
//  }
//}


/**
 * Exports a variable
 *
 * @param $var The variable to be exported
 */
function udi_central_debug($var) {
  drupal_set_message('<xmp>'.var_export($var, 1).'</xmp>', FALSE);
}

/**
 * UDI Central Main Page
 *
 */
function udi_central_main() {
  drupal_set_title("UDI Central");
  return "UDI Central";
}

/**
* Developers can use to test their functions.
*
*/
function udi_central_dev_test() {
  $html = "DEVELOPMENT TEST";

  return $html;
}

/**
* Export main page
*
*/
function udi_central_export_page() {
  $html = "EXPORT";
  return $html;
}



function udi_central_menu_is_exist($name) {
  $sql = "SELECT m.menu_name FROM {menu_custom} m WHERE m.menu_name = '%s'";
  $menu_name = 'menu-' . strtolower($name);

  if (db_result(db_query($sql, $menu_name))) {
	return true;
  }

  return false;
}

function udi_central_get_node_path($alias, $callback = false, $language = null) {
  // If the input alias is reference a callback instead of a node
  // return it directly.
  // TODO: Check if callback actually exists. If not return 'node'
  if ($callback) {
    return $alias;
  }

  $sql = "SELECT u.src FROM {url_alias} u WHERE u.dst = '%s'";
  if ($language) $sql += " AND u.language = '%s'";

  if ($result = db_result(db_query($sql, $alias, $language))) {
    return $result;
  }

  return 'node';
}

/**
 * Import CCK content-type previously exported via the CCK exporter.
 * It reads from the /cck directory, within the module, all the .cck files specified
 * in the $types array.
 *
 * @param $types
 * 	Array of cck filename without the .cck extension
 * @param $module
 * 	Name of the module that has the cck files to be imported.
 * @return NONE
 */
function udi_central_cck_import($types, $module = 'udi_central') {
  module_load_include('inc', 'install_profile_api', 'contrib/content_copy');

  // A call to import all cck files
  $path = drupal_get_path('module', $module).'/cck';
  foreach ($types as $cck) {
    install_content_copy_import_from_file($path.'/'.$cck.'.cck');
  }

  return true;
}

/**
 * Implemenation of hook_preprocess_page()
 *
 */
function udi_central_preprocess_page(&$vars) {
	Global $user;

	$vars['contact_us'] = l(t("Contact Us"), 'about/contact');

	if ($user->uid > 0) {
		$vars['logout'] = l(t("Logout"), 'logout');

		// Get user role
		$vars['dashboard'] = $user->uid == 1 || in_array('board of directors', $user->roles) ? l(t("My Dashboard"), 'dashboard') : NULL;
	}
}
